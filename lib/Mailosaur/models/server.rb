# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Mailosaur
  module Models
    #
    # Model object.
    #
    #
    class Server
      # @return [String] Unique identifier for the server. Used as username for
      # SMTP/POP3 authentication.
      attr_accessor :id

      # @return [String] SMTP/POP3 password.
      attr_accessor :password

      # @return [String] A name used to identify the server.
      attr_accessor :name

      # @return Users (excluding administrators) who have access to the server.
      attr_accessor :users

      # @return [Integer] The number of messages currently in the server.
      attr_accessor :messages

      # @return [Array<ForwardingRule>] The rules used to manage email
      # forwarding for this server.
      attr_accessor :forwarding_rules


      #
      # Mapper for Server class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Server',
          type: {
            name: 'Composite',
            class_name: 'Server',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              password: {
                client_side_validation: true,
                required: false,
                serialized_name: 'password',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              users: {
                client_side_validation: true,
                required: false,
                serialized_name: 'users',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'UuidElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              messages: {
                client_side_validation: true,
                required: false,
                serialized_name: 'messages',
                type: {
                  name: 'Number'
                }
              },
              forwarding_rules: {
                client_side_validation: true,
                required: false,
                serialized_name: 'forwardingRules',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ForwardingRuleElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ForwardingRule'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end

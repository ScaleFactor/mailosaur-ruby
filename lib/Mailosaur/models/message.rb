# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Mailosaur
  module Models
    #
    # Model object.
    #
    #
    class Message
      # @return Unique identifier for the message.
      attr_accessor :id

      # @return [Array<MessageAddress>] The sender of the message.
      attr_accessor :from

      # @return [Array<MessageAddress>] The message’s recipient.
      attr_accessor :to

      # @return [Array<MessageAddress>] Carbon-copied recipients for email
      # messages.
      attr_accessor :cc

      # @return [Array<MessageAddress>] Blind carbon-copied recipients for
      # email messages.
      attr_accessor :bcc

      # @return [DateTime] The datetime that this message was received by
      # Mailosaur.
      attr_accessor :received

      # @return [String] The message’s subject.
      attr_accessor :subject

      # @return [MessageContent] Message content that was sent in HTML format.
      attr_accessor :html

      # @return [MessageContent] Message content that was sent in plain text
      # format.
      attr_accessor :text

      # @return [Array<Attachment>] An array of attachment metadata for any
      # attached files.
      attr_accessor :attachments

      # @return [Metadata]
      attr_accessor :metadata

      # @return [String] Identifier for the server in which the message is
      # located.
      attr_accessor :server


      #
      # Mapper for Message class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Message',
          type: {
            name: 'Composite',
            class_name: 'Message',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              from: {
                client_side_validation: true,
                required: false,
                serialized_name: 'from',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MessageAddressElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MessageAddress'
                      }
                  }
                }
              },
              to: {
                client_side_validation: true,
                required: false,
                serialized_name: 'to',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MessageAddressElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MessageAddress'
                      }
                  }
                }
              },
              cc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'cc',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MessageAddressElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MessageAddress'
                      }
                  }
                }
              },
              bcc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'bcc',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MessageAddressElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MessageAddress'
                      }
                  }
                }
              },
              received: {
                client_side_validation: true,
                required: false,
                serialized_name: 'received',
                type: {
                  name: 'DateTime'
                }
              },
              subject: {
                client_side_validation: true,
                required: false,
                serialized_name: 'subject',
                type: {
                  name: 'String'
                }
              },
              html: {
                client_side_validation: true,
                required: false,
                serialized_name: 'html',
                type: {
                  name: 'Composite',
                  class_name: 'MessageContent'
                }
              },
              text: {
                client_side_validation: true,
                required: false,
                serialized_name: 'text',
                type: {
                  name: 'Composite',
                  class_name: 'MessageContent'
                }
              },
              attachments: {
                client_side_validation: true,
                required: false,
                serialized_name: 'attachments',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'AttachmentElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'Attachment'
                      }
                  }
                }
              },
              metadata: {
                client_side_validation: true,
                required: false,
                serialized_name: 'metadata',
                type: {
                  name: 'Composite',
                  class_name: 'Metadata'
                }
              },
              server: {
                client_side_validation: true,
                required: false,
                serialized_name: 'server',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
